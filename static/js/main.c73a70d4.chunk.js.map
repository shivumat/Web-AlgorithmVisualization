{"version":3,"sources":["components/menu/tabPanel/TabPanel.js","components/menu/tabPanel/common/algoSelect/AlgorithmSelect.js","components/menu/tabPanel/pathFinder/pathFinderBar/weightField/WeightField.js","components/menu/tabPanel/common/speedSelect/SpeedSelect.js","components/menu/tabPanel/pathFinder/cellIcons/Start.js","components/menu/tabPanel/pathFinder/cellIcons/Stop.js","components/menu/tabPanel/pathFinder/cellIcons/Visiting.js","components/menu/tabPanel/pathFinder/cellIcons/Visited.js","components/menu/tabPanel/pathFinder/cellIcons/Path.js","components/menu/tabPanel/pathFinder/cellIcons/Wall.js","components/menu/tabPanel/pathFinder/cellIcons/Weight.js","components/menu/tabPanel/pathFinder/pathFinderBar/legends/Legends.js","components/menu/tabPanel/pathFinder/pathFinderBar/PathFinderBar.js","components/menu/tabPanel/pathFinder/pathFindingBlock/cellRow/cell/Cell.js","components/menu/tabPanel/pathFinder/pathFindingBlock/cellRow/CellRow.js","components/menu/tabPanel/pathFinder/pathFindingBlock/PathFindingBlock.js","static/pathfinder/algorithms/dijkstras.js","static/pathfinder/algorithms/astar.js","static/pathfinder/algorithms/bfs.js","static/pathfinder/algorithms/index.js","static/pathfinder/enums/algos.js","static/pathfinder/enums/speeds.js","components/menu/tabPanel/pathFinder/PathFinder.js","components/menu/tabPanel/sort/sortBar/SortBar.js","components/menu/tabPanel/sort/sortBlock/tower/Tower.js","components/menu/tabPanel/sort/sortBlock/SortBlock.js","static/sort/algorithms/bubble.js","static/sort/algorithms/selection.js","static/sort/algorithms/insert.js","static/sort/algorithms/index.js","static/sort/enums/algos.js","static/sort/enums/speeds.js","components/menu/tabPanel/sort/Sort.js","static/menuItems.js","components/menu/menuBar/MenuBar.js","components/menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["TabPanel","props","children","value","index","other","className","role","hidden","id","aria-labelledby","Box","p","Typography","component","AlgorithmSelect","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","algos","setFindAlgo","handleClose","event","current","contains","target","Fragment","ButtonGroup","variant","color","ref","aria-label","Button","onClick","console","info","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","option","MenuItem","key","selected","handleMenuItemClick","WeightField","updateISWeightCehcked","updateWeight","weightDisabled","Checkbox","onChange","checked","inputProps","disabled","TextField","type","label","error","onInput","length","slice","InputLabelProps","shrink","max","min","SpeedSelect","speeds","setFindSpeed","text","Start","Stop","Visiting","Visited","Path","fontSize","Wall","Weight","Icon","Legends","useStyles","makeStyles","theme","subheader","backgroundColor","palette","background","paper","appBar","top","grow","flexGrow","fabButton","position","zIndex","left","right","margin","PathFinderButtons","classes","AppBar","Toolbar","clearBlock","Fab","isLoading","startLoading","CircularProgress","Cell","isWall","setIsWall","isWeight","setIsWeight","cellWeight","setCellWeight","xCord","yCord","mouseDownOnCell","cellOnHover","mouseUpOnCell","isStart","isStop","isWallCell","isWeightChecked","isMouseDown","isDragStart","isDragStop","isVisited","isVisiting","isPath","isWeightCell","weight","toggleWallAndWeight","start","stop","useEffect","onMouseDown","e","log","onMouseEnter","onMouseUp","CellRow","visitStatus","path","walls","weights","isStartCell","column","isStopCell","isVisitedCell","some","node","visited","isVisitingCell","isPathCell","columns","Array","fill","i","PathFindingBlock","rows","Card","row","getNeighbourNodeWithShortestDistnace","currentNode","xOffset","yOffset","xLimit","yLimit","neighBourXCord","neighBourYCord","item","isUnAccessibleNode","neighbourIndex","findIndex","pathWeight","getCellWeight","previous","push","sort","node1","node2","weightIndex","parseInt","dijkstras","resultVisitStatus","currentNodeIndex","holisticWeight","getHolisticDistance","end","Math","sqrt","pow","aStarPathFinder","findPath","algorithm","dijkstrasPathFinder","bfs","SLOW","MEDIUM","FAST","PathFinder","setStart","setStop","setWalls","setPath","setVisitStatus","setWeights","dragStart","setDragStart","dragStop","setDragStop","mouseDown","setMouseDown","setIsLoading","setIsWeightChecked","algo","setAlgo","speed","setSpeed","setWeight","setWeightDisabled","getPathFromStop","finalPath","pathNode","find","visit","addOrRemoveWallOrWeight","wallIndex","wall","weightCell","splice","clearBeforeLoading","document","body","cursor","isChecked","updateWeightDisabled","Divider","Modal","BackdropProps","SortBar","reset","Tower","Fade","in","timeout","enter","exit","isHighlighted","SortBlock","sortArray","highlighted","includes","bubble","lowerComparingIndex","upperComparingIndex","array","upperLimit","isDone","temp","selection","minIndex","newMinIndex","insert","currentToInsert","toInsert","sortArrayObject","Sort","getJumbledArray","tmp","floor","random","setSortArrayObject","resultArrayObject","MenuBar","Tabs","handleChange","indicatorColor","textColor","centered","menuItems","menu","Tab","icon","menuIcon","root","width","height","Menu","setValue","newValue","tabPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c73a70d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport './TabPanel.css'\r\n\r\nexport default function TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div className='tabpanel' role=\"tabpanel\" hidden={value !== index} id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`} {...other} >\r\n      {value === index && (\r\n        <Box className='tabBox' p={3}>\r\n          <Typography className='tab' component=\"div\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\n\r\nexport default function AlgorithmSelect(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const {algos,setFindAlgo} = props;\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${algos[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n    setFindAlgo(algos[index])\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n          <Button onClick={handleClick}>{algos[selectedIndex]}</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-controls={open ? 'split-button-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-label=\"select merge strategy\"\r\n            aria-haspopup=\"menu\"\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id=\"split-button-menu\">\r\n                    {algos.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './WeightField.css'\r\n\r\nexport default function WeightField(props) {\r\n\r\n    const {updateISWeightCehcked, updateWeight, weightDisabled}= props;\r\n\r\n  const toggleIsWeight = (event) => {\r\n    updateISWeightCehcked(event.target.checked);\r\n  };\r\n  \r\n  const onWeightChange = (event) => {\r\n    updateWeight(event.target.value);\r\n  };\r\n\r\n  const onWeightInput = (event) => {\r\n    if(event.target.value.length > 2){\r\n        event.target.value = event.target.value.slice(0,2)\r\n    }\r\n    if(event.target.value===''){\r\n        event.target.value='';\r\n    }\r\n};\r\n\r\n  return (\r\n      <div className=\"weightField\">\r\n        <Checkbox\r\n            onChange={toggleIsWeight}\r\n            color=\"primary\"\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            disabled={weightDisabled}\r\n\r\n        />\r\n        <TextField\r\n          className=\"weightNumber\"\r\n          type=\"number\"\r\n          label=\"Weight\"\r\n          error={false}\r\n          disabled={weightDisabled}\r\n          onChange={onWeightChange}\r\n          onInput={onWeightInput}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n            className: 'weightLabel',\r\n          }}\r\n          inputProps={{\r\n            className: 'weightInput',\r\n            max:    99,\r\n            min:    0\r\n          }}\r\n        />\r\n      </div>\r\n  )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\n\r\nexport default function SpeedSelect(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const {speeds,setFindSpeed} = props;\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${speeds[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setFindSpeed(speeds[index])\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n          <Button onClick={handleClick}>{speeds[selectedIndex].text}</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-controls={open ? 'split-button-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-label=\"select merge strategy\"\r\n            aria-haspopup=\"menu\"\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id=\"split-button-menu\">\r\n                    {speeds.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option.text}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\r\nimport './CellIcons.css';\r\n\r\nexport default function Start(){\r\n\r\n    return  <PlayArrowRoundedIcon className='cellIcon'/>\r\n}","import React from 'react';\r\nimport FlagRoundedIcon from '@material-ui/icons/FlagRounded';\r\nimport './CellIcons.css';\r\n\r\nexport default function Stop(){\r\n\r\n    return  <FlagRoundedIcon className='cellIcon'/>   \r\n}","import React from 'react';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport './CellIcons.css';\r\n\r\nexport default function Visiting(props){\r\n\r\n    return  <CheckCircleOutlineRoundedIcon {...props} color='primary' className='cellIcon'/>\r\n}","import React from 'react';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport './CellIcons.css';\r\n\r\nexport default function Visited(props){\r\n\r\n    return  <CheckCircleOutlineRoundedIcon {...props} className='cellVisited'/>  \r\n}","import React from 'react';\r\nimport SettingsOverscanRoundedIcon from '@material-ui/icons/SettingsOverscanRounded';\r\nimport './CellIcons.css';\r\n\r\nexport default function Path(){\r\n\r\n    return  <SettingsOverscanRoundedIcon fontSize='large' className='cellPath'/>\r\n}","import React from 'react';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport './CellIcons.css';\r\n\r\nexport default function Wall(){\r\n\r\n    return  <StopIcon fontSize='large' className='cellIcon'/> \r\n}","import React from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport './CellIcons.css';\r\n\r\nexport default function Weight(props){\r\n\r\n    return  <Icon fontSize='small' className='weightCellIcon'>{props.value}</Icon>  \r\n}","import React from 'react';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Start from '../../cellIcons/Start';\r\nimport './Legends.css'\r\nimport Stop from '../../cellIcons/Stop';\r\nimport Visiting from '../../cellIcons/Visiting';\r\nimport Visited from '../../cellIcons/Visited';\r\nimport Path from '../../cellIcons/Path';\r\nimport Wall from '../../cellIcons/Wall';\r\nimport Weight from '../../cellIcons/Weight';\r\n\r\nexport default function Legends(){\r\n\r\n    return <div className='pathFinderLegend'>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Start/>\r\n                            <span className='pathFinderLegendLabel'>Start</span>\r\n                </div>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Stop/>\r\n                            <span className='pathFinderLegendLabel'>Stop</span>\r\n                </div>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Visiting id='legendVisiting'/>\r\n                            <span className='pathFinderLegendLabel'>Visiting</span>\r\n                </div>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Visited id='legendVisited'/>\r\n                            <span className='pathFinderLegendLabel'>Visited</span>\r\n                </div>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Path/>\r\n                            <span className='pathFinderLegendLabel'>Path</span>\r\n                </div>\r\n                <div className='pathFinderLegendCell'>\r\n                            <Wall/>\r\n                            <span className='pathFinderLegendLabel'>Wall</span>\r\n                </div>\r\n            </div>\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AlgorithmSelect from '../../common/algoSelect/AlgorithmSelect';\r\nimport WeightField from './weightField/WeightField'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SpeedSelect from '../../common/speedSelect/SpeedSelect';\r\nimport './PathFinderBar.css'\r\nimport Legends from './legends/Legends';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: 'auto'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nexport default function PathFinderButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  function startLoading(){\r\n    if(!props.isLoading){\r\n      props.startLoading();\r\n    }\r\n  }\r\n\r\n  return (\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <AlgorithmSelect {...props}/>\r\n          <Button variant=\"contained\" color=\"primary\" className=\"clearButton\" onClick={props.clearBlock}>CLEAR</Button>\r\n          <WeightField {...props} />\r\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.fabButton} onClick={startLoading}>\r\n            {props.isLoading ? <CircularProgress className='loadingProgress' color=\"inherit\"/>:<PlayArrowIcon />}\r\n          </Fab>\r\n          <div className={classes.grow} />\r\n          <Legends/>\r\n          <SpeedSelect {...props}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './Cell.css';\r\nimport Start from '../../../cellIcons/Start';\r\nimport Stop from '../../../cellIcons/Stop';\r\nimport Weight from '../../../cellIcons/Weight';\r\nimport Wall from '../../../cellIcons/Wall';\r\nimport Path from '../../../cellIcons/Path';\r\nimport Visited from '../../../cellIcons/Visited';\r\nimport Visiting from '../../../cellIcons/Visiting';\r\n\r\nexport default function Cell(props){\r\n    const [isWall,setIsWall] = React.useState(false);\r\n    const [isWeight,setIsWeight] = React.useState(false);\r\n    const [cellWeight,setCellWeight] = React.useState(0);\r\n\r\n    const {xCord, yCord, mouseDownOnCell, cellOnHover, mouseUpOnCell, isStart , isStop, \r\n        isWallCell, isWeightChecked, isMouseDown, isDragStart, isDragStop, isVisited, isVisiting, \r\n        isPath, isLoading, isWeightCell, weight} = props;\r\n\r\n    function getCellContent(){\r\n        return  isStart     ?   <Start/>:\r\n                isStop      ?   <Stop/> : \r\n                isWeight    ?   <Weight value={cellWeight} />   :\r\n                isWall      ?   <Wall/> : \r\n                isPath      ?   <Path/> : \r\n                isVisited   ?   <Visited/>  : \r\n                isVisiting  ?   <Visiting/> : \r\n                        '';\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setIsWall(isWallCell);\r\n        setIsWeight(isWeightCell);\r\n    },[isWallCell, isWeightCell])\r\n\r\n    function onCellMouseDown(e){\r\n        console.log(isWall,isWeight)\r\n        if(!isLoading){\r\n            toggleWallAndWeight(isStart, isStop);\r\n            mouseDownOnCell(xCord,yCord);\r\n        }\r\n    }\r\n\r\n    function toggleWallAndWeight(start , stop){\r\n        if(isWeightChecked){\r\n            if(isWeight){\r\n                setCellWeight(weight);\r\n            }\r\n            if(isWall){\r\n                setIsWall(false);\r\n            }\r\n           if(!start && !stop){\r\n                setIsWeight(true);\r\n                setCellWeight(weight);\r\n            }\r\n        }else{\r\n            if(isWeight){\r\n                setIsWeight(false);\r\n            }\r\n            if(isWall){\r\n                setIsWall(false);\r\n            }\r\n            else{\r\n                if(!start && !stop){\r\n                    setIsWall(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    function onCellMouseUp(e){\r\n        if(!isLoading){\r\n            mouseUpOnCell(xCord,yCord);\r\n        }\r\n    }\r\n\r\n    function onCellMouseOver(e){\r\n        if(!isLoading){\r\n            if(isMouseDown){\r\n                toggleWallAndWeight(isDragStart, isDragStop)\r\n            }\r\n            cellOnHover(xCord,yCord);\r\n        }\r\n    }\r\n\r\n    return (<div className='cell' onMouseDown={onCellMouseDown} onMouseEnter={onCellMouseOver} onMouseUp={onCellMouseUp}>\r\n            {getCellContent()}\r\n        </div>)\r\n\r\n}","import React from 'react';\r\nimport Cell from './cell/Cell'\r\nimport './CellRow.css'\r\n\r\nexport default function CellRow(props){\r\n\r\n    const { start, stop, visitStatus , path, walls, weights} = props;\r\n\r\n    const isStartCell = (column) => column.xCord===start.xCord && props.yCord===start.yCord;\r\n\r\n    const isStopCell = (column) => column.xCord===stop.xCord && props.yCord===stop.yCord;\r\n\r\n    const isVisitedCell = (column) => visitStatus.some((node) => node.visited && column.xCord === node.xCord && props.yCord === node.yCord);\r\n\r\n    const isVisitingCell = (column) => visitStatus.some((node) => (!node.visited) && column.xCord === node.xCord && props.yCord === node.yCord);\r\n\r\n    const isPathCell = (column) => path.some((node) => column.xCord === node.xCord && props.yCord === node.yCord);\r\n\r\n    const isWallCell = (column) => walls.some((node) => column.xCord === node.xCord && props.yCord === node.yCord);\r\n\r\n    const isWeightCell = (column) => weights.some((node) => column.xCord === node.xCord && props.yCord === node.yCord);\r\n\r\n    const columns = new Array(props.columns).fill().map((value, index) => (({\r\n        xCord: index\r\n      })));\r\n\r\n    return (\r\n        <div className='cellRow'>\r\n            {columns.map((column, i) => <Cell key={i} isStart={isStartCell(column)} isStop={isStopCell(column)}\r\n                        xCord = {column.xCord} yCord = {props.yCord} isVisited={isVisitedCell(column)} {...props}\r\n                        isVisiting={isVisitingCell(column)} isPath={isPathCell(column)} \r\n                        isWallCell={isWallCell(column)} isWeightCell={isWeightCell(column)} />)}\r\n        </div>\r\n        );\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CellRow from './cellRow/CellRow';\r\nimport './PathFindingBlock.css'\r\n\r\nexport default function PathFindingBlock(props) {\r\n\r\n  const rows = new Array(props.rows).fill().map((value, index) => (({\r\n    yCord: index\r\n  })));\r\n\r\n  return (\r\n    <Card className='pathFidingBlock'>\r\n      {rows.map((row, i) => <CellRow key={i} yCord = {row.yCord} {...props}/>)}\r\n    </Card>\r\n  );\r\n}\r\n","const dijkstras = (start, stop, walls, visitStatus, weights, xLimit, yLimit) =>{\r\n    let resultVisitStatus = [...visitStatus];\r\n    if(resultVisitStatus.length === 0){\r\n        resultVisitStatus.push({...start, 'previous' : {start}, 'pathWeight' : 0 , 'visited' :false});\r\n    }\r\n    if(resultVisitStatus.length !== 0){\r\n        var currentNodeIndex = resultVisitStatus.findIndex((node) => !node.visited);\r\n        if(currentNodeIndex>-1){\r\n            var currentNode = resultVisitStatus[currentNodeIndex];\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , -1, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , -1 , 0, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , 1, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 1 , 0, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus[currentNodeIndex].visited = true;\r\n        }\r\n    }\r\n    return resultVisitStatus;\r\n}\r\n\r\nconst getNeighbourNodeWithShortestDistnace = (currentNode, visitStatus, xOffset , yOffset, xLimit, yLimit, walls, weights) => {\r\n    var neighBourXCord = currentNode.xCord + xOffset;\r\n    var neighBourYCord = currentNode.yCord + yOffset;\r\n    if(!isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus)){\r\n        var neighbourIndex = visitStatus.findIndex((node) => node.visited === false && node.xCord === neighBourXCord && node.yCord === neighBourYCord)\r\n        if(neighbourIndex > -1 && visitStatus[neighbourIndex].pathWeight < currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights)){\r\n            visitStatus[neighbourIndex].pathWeight = currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights);\r\n            visitStatus[neighbourIndex].previous = {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord};\r\n        }else if(neighbourIndex < 0){\r\n            visitStatus.push({'xCord' : neighBourXCord , 'yCord' : neighBourYCord, \r\n            'previous' : {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord}, \r\n            'pathWeight' : currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights), \r\n            'visited' : false})\r\n        }\r\n    }\r\n    visitStatus.sort((node1,node2) => node1.pathWeight - node2.pathWeight);\r\n    return visitStatus;\r\n}\r\n\r\nconst getCellWeight = (xCord, yCord, weights) => {\r\n    var weightIndex = weights.findIndex((node) => node.xCord === xCord && node.yCord === yCord);\r\n    return weightIndex > -1 ?  parseInt(weights[weightIndex].weight) +1  : 1;\r\n}\r\n\r\nfunction isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus) {\r\n    return neighBourXCord < 0 || \r\n    neighBourYCord < 0 || \r\n    neighBourXCord >= xLimit || \r\n    neighBourYCord >= yLimit ||\r\n    walls.some((item) => item.xCord === neighBourXCord && item.yCord === neighBourYCord) ||\r\n    visitStatus.some((item) => item.visited && item.xCord === neighBourXCord && item.yCord === neighBourYCord);\r\n}\r\n\r\nexport default dijkstras;","const aStarPathFinder = (start, stop, walls, visitStatus, weights, xLimit, yLimit) =>{\r\n    let resultVisitStatus = [...visitStatus];\r\n    if(resultVisitStatus.length === 0){\r\n        resultVisitStatus.push({...start, 'previous' : {start}, 'pathWeight' : 0 , \r\n        'holisticWeight' : getHolisticDistance(start.xCord, start.yCord, stop),'visited' :false});\r\n    }\r\n    if(resultVisitStatus.length !== 0){\r\n        var currentNodeIndex = resultVisitStatus.findIndex((node) => !node.visited);\r\n        if(currentNodeIndex>-1){\r\n            var currentNode = resultVisitStatus[currentNodeIndex];\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , -1, xLimit, yLimit, walls, weights, stop);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , -1 , 0, xLimit, yLimit, walls, weights, stop);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , 1, xLimit, yLimit, walls, weights, stop);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 1 , 0, xLimit, yLimit, walls, weights, stop);\r\n            resultVisitStatus[currentNodeIndex].visited = true;\r\n        }\r\n    }\r\n    return resultVisitStatus;\r\n}\r\n\r\nconst getNeighbourNodeWithShortestDistnace = (currentNode, visitStatus, xOffset , yOffset, xLimit, yLimit, walls, weights, stop) => {\r\n    var neighBourXCord = currentNode.xCord + xOffset;\r\n    var neighBourYCord = currentNode.yCord + yOffset;\r\n    if(!isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus)){\r\n        var neighbourIndex = visitStatus.findIndex((node) => node.visited === false && node.xCord === neighBourXCord && node.yCord === neighBourYCord)\r\n        if(neighbourIndex > -1 && visitStatus[neighbourIndex].pathWeight < currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights)){\r\n            visitStatus[neighbourIndex].pathWeight = currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights);\r\n            visitStatus[neighbourIndex].previous = {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord};\r\n            visitStatus[neighbourIndex].holisticWeight = currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights) + \r\n                                                                getHolisticDistance(neighBourXCord, neighBourYCord, stop);\r\n        }else if(neighbourIndex < 0){\r\n            visitStatus.push({'xCord' : neighBourXCord , 'yCord' : neighBourYCord, \r\n            'previous' : {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord}, \r\n            'pathWeight' : currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights), \r\n            'holisticWeight' : currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights) + getHolisticDistance(neighBourXCord, neighBourYCord, stop), \r\n            'visited' : false})\r\n        }\r\n    }\r\n    visitStatus.sort((node1,node2) => node1.holisticWeight - node2.holisticWeight);\r\n    return visitStatus;\r\n}\r\n\r\nconst getCellWeight = (xCord, yCord, weights) => {\r\n    var weightIndex = weights.findIndex((node) => node.xCord === xCord && node.yCord === yCord);\r\n    return weightIndex > -1 ?  parseInt(weights[weightIndex].weight) +1  : 1;\r\n}\r\n\r\nfunction isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus) {\r\n    return neighBourXCord < 0 || \r\n    neighBourYCord < 0 || \r\n    neighBourXCord >= xLimit || \r\n    neighBourYCord >= yLimit ||\r\n    walls.some((item) => item.xCord === neighBourXCord && item.yCord === neighBourYCord) ||\r\n    visitStatus.some((item) => item.visited && item.xCord === neighBourXCord && item.yCord === neighBourYCord);\r\n}\r\n\r\nconst getHolisticDistance = (xCord, yCord, end) =>{\r\n    return Math.sqrt(Math.pow(parseInt(end.yCord) - parseInt(yCord),2) + Math.pow(parseInt(end.xCord) - parseInt(xCord),2))\r\n}\r\n\r\nexport default aStarPathFinder;","const dijkstras = (start, stop, walls, visitStatus, weights, xLimit, yLimit) =>{\r\n    let resultVisitStatus = [...visitStatus];\r\n    if(resultVisitStatus.length === 0){\r\n        resultVisitStatus.push({...start, 'previous' : {start}, 'pathWeight' : 0 , 'visited' :false});\r\n    }\r\n    if(resultVisitStatus.length !== 0){\r\n        var currentNodeIndex = resultVisitStatus.findIndex((node) => !node.visited);\r\n        if(currentNodeIndex>-1){\r\n            var currentNode = resultVisitStatus[currentNodeIndex];\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , -1, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , -1 , 0, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 0 , 1, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus = getNeighbourNodeWithShortestDistnace(currentNode, resultVisitStatus , 1 , 0, xLimit, yLimit, walls, weights);\r\n            resultVisitStatus[currentNodeIndex].visited = true;\r\n        }\r\n    }\r\n    return resultVisitStatus;\r\n}\r\n\r\nconst getNeighbourNodeWithShortestDistnace = (currentNode, visitStatus, xOffset , yOffset, xLimit, yLimit, walls, weights) => {\r\n    var neighBourXCord = currentNode.xCord + xOffset;\r\n    var neighBourYCord = currentNode.yCord + yOffset;\r\n    if(!isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus)){\r\n        var neighbourIndex = visitStatus.findIndex((node) => node.visited === false && node.xCord === neighBourXCord && node.yCord === neighBourYCord)\r\n        if(neighbourIndex > -1 && visitStatus[neighbourIndex].pathWeight < currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights)){\r\n            visitStatus[neighbourIndex].pathWeight = currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights);\r\n            visitStatus[neighbourIndex].previous = {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord};\r\n        }else if(neighbourIndex < 0){\r\n            visitStatus.push({'xCord' : neighBourXCord , 'yCord' : neighBourYCord, \r\n            'previous' : {'xCord' : currentNode.xCord , 'yCord' : currentNode.yCord}, \r\n            'pathWeight' : currentNode.pathWeight + getCellWeight(neighBourXCord, neighBourYCord, weights), \r\n            'visited' : false})\r\n        }\r\n    }\r\n    return visitStatus;\r\n}\r\n\r\nconst getCellWeight = (xCord, yCord, weights) => {\r\n    var weightIndex = weights.findIndex((node) => node.xCord === xCord && node.yCord === yCord);\r\n    return weightIndex > -1 ?  parseInt(weights[weightIndex].weight) +1  : 1;\r\n}\r\n\r\nfunction isUnAccessibleNode(neighBourXCord, neighBourYCord, xLimit, yLimit, walls, visitStatus) {\r\n    return neighBourXCord < 0 || \r\n    neighBourYCord < 0 || \r\n    neighBourXCord >= xLimit || \r\n    neighBourYCord >= yLimit ||\r\n    walls.some((item) => item.xCord === neighBourXCord && item.yCord === neighBourYCord) ||\r\n    visitStatus.some((item) => item.visited && item.xCord === neighBourXCord && item.yCord === neighBourYCord);\r\n}\r\n\r\nexport default dijkstras;","import dijkstrasPathFinder from './dijkstras'\r\nimport aStarPathFinder from './astar'\r\nimport bfs from './bfs'\r\nimport {DIJKSTRAS,ASTAR,BFS} from '../enums/algos';\r\n\r\nconst findPath = (start, stop, walls, visitStatus, weights, algorithm, xLimit, yLimit) => {\r\n    if(algorithm === DIJKSTRAS){\r\n        return dijkstrasPathFinder(start, stop, walls, visitStatus, weights, xLimit, yLimit);\r\n    }\r\n    if(algorithm === ASTAR){\r\n        return aStarPathFinder(start, stop, walls, visitStatus, weights, xLimit, yLimit);\r\n    }\r\n    if(algorithm === BFS){\r\n        return bfs(start, stop, walls, visitStatus, weights, xLimit, yLimit);\r\n    }\r\n}\r\n\r\n\r\nexport default findPath;","export const DIJKSTRAS = 'Dijkstras'\r\nexport const ASTAR = 'A-Star'\r\nexport const BFS = 'BFS'","export const SLOW = {'text' : 'Slow', 'value' : 5}\r\nexport const MEDIUM = {'text' : 'Medium', 'value' : 20}\r\nexport const FAST = {'text' : 'Fast', 'value' : 80}","import React, { useEffect } from 'react';\r\nimport PathFinderButtons from './pathFinderBar/PathFinderBar';\r\nimport PathFindingBlock from './pathFindingBlock/PathFindingBlock';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport findPath from '../../../../static/pathfinder/algorithms/index';\r\nimport {DIJKSTRAS,ASTAR,BFS} from '../../../../static/pathfinder/enums/algos';\r\nimport {SLOW, MEDIUM, FAST} from '../../../../static/pathfinder/enums/speeds';\r\nimport './PathFinder.css';\r\n\r\nexport default function PathFinder(props){\r\n\r\n    const rows = 25;\r\n    const columns = 61;\r\n    const [start, setStart] = React.useState({'xCord' : 15, 'yCord' : 12});\r\n    const [stop, setStop] = React.useState({'xCord' : 45, 'yCord' : 12});\r\n    const [walls, setWalls] = React.useState([]);\r\n    const [path, setPath] = React.useState([]);\r\n    const [visitStatus, setVisitStatus] = React.useState([]);\r\n    const [weights, setWeights] = React.useState([]);\r\n    const [dragStart, setDragStart] = React.useState(false);\r\n    const [dragStop, setDragStop] = React.useState(false);\r\n    const [mouseDown, setMouseDown] = React.useState(false);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [isWeightChecked, setIsWeightChecked] = React.useState(false);\r\n    const [algo, setAlgo] = React.useState(DIJKSTRAS);\r\n    const [speed, setSpeed] = React.useState(SLOW);\r\n    const [weight, setWeight] = React.useState(0);\r\n    const [weightDisabled, setWeightDisabled] = React.useState(false);\r\n\r\n    const getPathFromStop= (resultVisitStatus) => {\r\n        var node = stop;\r\n        var finalPath = [];\r\n        while(node.xCord !== start.xCord || node.yCord !== start.yCord){\r\n            let pathNode = (resultVisitStatus.find((visit) => visit.xCord === node.xCord && visit.yCord === node.yCord)).previous;\r\n            finalPath.push(pathNode);\r\n            node = pathNode;\r\n        }\r\n        return finalPath;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(isLoading){\r\n            document.body.style.cursor = 'progress';\r\n        }else{\r\n            document.body.style.cursor = 'default';\r\n        }\r\n        if(isLoading && visitStatus.length === 0){\r\n            let resultVisitStatus = findPath(start, stop, walls, visitStatus, weights ,algo, columns, rows);\r\n            setVisitStatus(resultVisitStatus)\r\n        }\r\n        if(isLoading && visitStatus.length !== 0 && visitStatus.some((node) => !(node.visited && node.xCord === stop.xCord && node.yCord === stop.yCord))){\r\n            let resultVisitStatus = visitStatus;\r\n            let i = speed.value;\r\n            while(i !== 0){\r\n                resultVisitStatus = findPath(start, stop, walls, resultVisitStatus, weights ,algo, columns, rows);\r\n                i--;\r\n            }\r\n            if(!resultVisitStatus.some((node) => !node.visited)){\r\n                console.log(resultVisitStatus)\r\n                if(resultVisitStatus.some((node) => node.xCord === stop.xCord && node.yCord === stop.yCord)){\r\n                    var finalPath = getPathFromStop(resultVisitStatus);\r\n                    setPath(finalPath);\r\n                }\r\n                setIsLoading(false);\r\n            }else{\r\n                setVisitStatus(resultVisitStatus);\r\n            }\r\n        }\r\n        if(path.length !== 0){\r\n            setIsLoading(false);\r\n        }\r\n       if(isLoading && visitStatus.length !== 0 && visitStatus.some((node) => node.visited && node.xCord === stop.xCord && node.yCord === stop.yCord)){\r\n            var finalPath = getPathFromStop(visitStatus);\r\n            setPath(finalPath);\r\n        }\r\n        if(algo === BFS){\r\n            setWeightDisabled(true);\r\n            setWeights([]);\r\n        }else{\r\n            setWeightDisabled(false)\r\n        }\r\n     },[isLoading, visitStatus, path, algo] )\r\n\r\n    function mouseDownOnCell(xCord, yCord){\r\n        setMouseDown(true);\r\n        if(start.xCord === xCord && start.yCord === yCord){\r\n            setDragStart(true);\r\n        }\r\n        else if(stop.xCord === xCord && stop.yCord === yCord){\r\n            setDragStop(true);\r\n        }else{\r\n            addOrRemoveWallOrWeight(xCord, yCord);\r\n        }\r\n    }\r\n\r\n    function mouseUpOnCell(xCord, yCord){\r\n        setMouseDown(false);\r\n        setDragStart(false);\r\n        setDragStop(false);\r\n    }\r\n  \r\n    function cellOnHover(xCord, yCord){\r\n        if(mouseDown && dragStart){\r\n            if(stop.xCord !== xCord || stop.yCord !== yCord){\r\n                setStart({'xCord' : xCord, 'yCord' : yCord})\r\n            }\r\n        }\r\n        else if(mouseDown && dragStop){\r\n            if(start.xCord !== xCord || start.yCord !== yCord){\r\n                setStop({'xCord' : xCord, 'yCord' : yCord})\r\n            }\r\n        }\r\n        else if(mouseDown && !dragStart && !dragStop){\r\n            addOrRemoveWallOrWeight(xCord, yCord);\r\n        }\r\n    }  \r\n\r\n    function addOrRemoveWallOrWeight(xCord, yCord) {\r\n        if(isWeightChecked && weight > 0 && !weightDisabled){\r\n            let wallIndex = walls.findIndex(\r\n                (wall) => wall.xCord === xCord && wall.yCord === yCord\r\n            );\r\n            let index = weights.findIndex(\r\n                (weightCell) => weightCell.xCord === xCord && weightCell.yCord === yCord\r\n            );\r\n            if(wallIndex > -1){\r\n                walls.splice(wallIndex, 1);\r\n            }\r\n            if (index > -1) {\r\n                weights[index].weight = weight;\r\n            } else {\r\n                weights.push({ 'xCord': xCord, 'yCord': yCord, 'weight' : weight });\r\n            }\r\n            setWalls(walls);\r\n            setWeights(weights);\r\n        }else{\r\n            let weightIndex = weights.findIndex(\r\n                (weightCell) => weightCell.xCord === xCord && weightCell.yCord === yCord\r\n            );\r\n            let index = walls.findIndex(\r\n                (wall) => wall.xCord === xCord && wall.yCord === yCord\r\n            );\r\n            if(weightIndex > -1){\r\n                weights.splice(weightIndex, 1);\r\n            }\r\n            if (index > -1) {\r\n                walls.splice(index, 1);\r\n            } else {\r\n                walls.push({ 'xCord': xCord, 'yCord': yCord });\r\n            }\r\n            setWalls(walls);\r\n            setWeights(weights);\r\n        }\r\n    }\r\n\r\n    function startLoading(){\r\n        clearBeforeLoading();\r\n        setIsLoading(true);\r\n    }\r\n\r\n    function setFindSpeed(speed){\r\n        setSpeed(speed);\r\n    }\r\n\r\n    function setFindAlgo(algo){\r\n        setAlgo(algo);\r\n    }\r\n\r\n    function clearBlock(){\r\n        setWalls([]);\r\n        setWeights([]);\r\n        clearBeforeLoading();\r\n    }\r\n\r\n    function clearBeforeLoading(){\r\n        setVisitStatus([]);\r\n        setPath([]);\r\n    }\r\n\r\n    function updateISWeightCehcked(isChecked){\r\n        setIsWeightChecked(isChecked);\r\n    }\r\n\r\n    function updateWeight(weight){\r\n        setWeight(weight);\r\n    }\r\n    \r\n    function updateWeightDisabled(disabled){\r\n        setWeightDisabled(disabled);\r\n    }\r\n    \r\n    return (\r\n        <div className='pathFinder'>\r\n            <PathFinderButtons isLoading={isLoading} startLoading={startLoading} algos={[DIJKSTRAS,ASTAR,BFS]} \r\n            speeds={[SLOW, MEDIUM, FAST]} setFindSpeed={setFindSpeed} setFindAlgo={setFindAlgo} weightDisabled={weightDisabled}\r\n            clearBlock={clearBlock} updateISWeightCehcked={updateISWeightCehcked} updateWeight={updateWeight} updateWeightDisabled={updateWeightDisabled}/>\r\n            <Divider/>\r\n            <PathFindingBlock rows={rows} columns={columns} start={start} stop={stop} isMouseDown={mouseDown}\r\n                isDragStart ={dragStart} isDragStop={dragStop} mouseUpOnCell={mouseUpOnCell} walls={walls}\r\n                cellOnHover={cellOnHover} mouseDownOnCell={mouseDownOnCell} path = {path} isLoading={isLoading}\r\n                visitStatus={visitStatus} weight={weight} isWeightChecked={isWeightChecked && weight > 0 && !weightDisabled}\r\n                weights={weights} weightDisabled={weightDisabled}/>\r\n            <Modal open={isLoading} BackdropProps={{className: 'loadingBackDrop'}}><div></div></Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlgorithmSelect from '../../common/algoSelect/AlgorithmSelect';\r\nimport SpeedSelect from '../../common/speedSelect/SpeedSelect';\r\nimport './SortBar.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: 'auto'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nexport default function SortBar(props) {\r\n  const classes = useStyles();\r\n\r\n  function startLoading(){\r\n    if(!props.isLoading){\r\n      props.startLoading();\r\n    }\r\n  }\r\n  \r\n  return (\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <AlgorithmSelect {...props}/>\r\n          <Button variant=\"contained\" color=\"primary\" className=\"clearButton\" onClick={props.reset}>RESET</Button>\r\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.fabButton} onClick={startLoading}>\r\n            {props.isLoading ? <CircularProgress className='loadingProgress' color=\"inherit\"/>:<PlayArrowIcon/>}\r\n          </Fab>\r\n          <div className={classes.grow} />\r\n          <SpeedSelect {...props}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Fade } from '@material-ui/core';\r\nimport './Tower.css'\r\n\r\nexport default function Tower(props) {\r\n\r\n  return (\r\n    <Fade in={true} timeout = {{enter : 1000, exit: 1000}}>\r\n        <div className={props.isHighlighted ? 'highlightedTower' : 'tower'}>\r\n            {[...Array(props.value)].map((e, i) => <div key={i} className='towerBlock'></div>)}\r\n        </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport './SortBlock.css'\r\nimport Tower from './tower/Tower';\r\n\r\nexport default function SortBlock(props) {\r\n  const {sortArray} = props;\r\n\r\n  return (\r\n    <Card className='sortBlock'>\r\n      {sortArray.map((value, i)=> <Tower key={i} value={value} isHighlighted = {props.highlighted.includes(i)}/> )}\r\n    </Card>\r\n  );\r\n}\r\n","const bubble = (lowerComparingIndex, upperComparingIndex, array, upperLimit) => {\r\n    let isDone = false;\r\n    let highlighted = [];\r\n    if(lowerComparingIndex === -1 && upperComparingIndex === -1){\r\n        lowerComparingIndex = 1;\r\n        upperComparingIndex = upperLimit - 1;\r\n    }\r\n    if(lowerComparingIndex > upperComparingIndex){\r\n        lowerComparingIndex = 1;\r\n        upperComparingIndex--;\r\n    }\r\n    if(upperComparingIndex < 1){\r\n        isDone = true;\r\n    }\r\n    if(!isDone){\r\n            if(array[lowerComparingIndex-1]>array[lowerComparingIndex]){\r\n            let temp = array[lowerComparingIndex-1];\r\n            array[lowerComparingIndex-1] = array[lowerComparingIndex];\r\n            array[lowerComparingIndex] = temp;\r\n            }       \r\n            lowerComparingIndex++;\r\n            highlighted = [lowerComparingIndex-1, lowerComparingIndex]\r\n    }else{\r\n        highlighted = []\r\n    }\r\n    return {\"sortArray\" : array , \"isDone\" : isDone , \"lowerComparingIndex\" : lowerComparingIndex , \"upperComparingIndex\" : upperComparingIndex,\r\n            \"highlighted\" : highlighted};\r\n}\r\n\r\nexport default bubble;","const selection = (lowerComparingIndex, upperComparingIndex, array, upperLimit, minIndex) => {\r\n    let isDone = false;\r\n    let highlighted = [];\r\n    let newMinIndex ;\r\n    if(lowerComparingIndex === -1 && upperComparingIndex === -1){\r\n        lowerComparingIndex = 0;\r\n        upperComparingIndex = lowerComparingIndex + 1;\r\n    }\r\n    if(lowerComparingIndex >= upperLimit){\r\n        isDone = true;\r\n    }\r\n    if(!isDone){\r\n        newMinIndex = minIndex === undefined ? lowerComparingIndex : minIndex;\r\n        if(upperComparingIndex !== upperLimit){\r\n            if(array[upperComparingIndex] < array[newMinIndex]){\r\n                newMinIndex = upperComparingIndex;\r\n            }\r\n            highlighted = [newMinIndex , upperComparingIndex]\r\n            upperComparingIndex++;\r\n        }else{\r\n            let temp = array[lowerComparingIndex];\r\n            array[lowerComparingIndex] = array[newMinIndex];\r\n            array[newMinIndex] = temp;\r\n            highlighted = [newMinIndex , lowerComparingIndex]\r\n            lowerComparingIndex++;\r\n            upperComparingIndex = lowerComparingIndex + 1;\r\n            newMinIndex = undefined;\r\n        }\r\n    }\r\n    return {\"sortArray\" : array , \"isDone\" : isDone , \"lowerComparingIndex\" : lowerComparingIndex , \"upperComparingIndex\" : upperComparingIndex,\r\n            \"highlighted\" : highlighted, \"minIndex\" : newMinIndex};\r\n}\r\n\r\nexport default selection;","\r\nconst insert = (lowerComparingIndex, upperComparingIndex, array, upperLimit, currentToInsert) => {\r\n    let isDone = false;\r\n    let highlighted = [];\r\n    let toInsert = currentToInsert === undefined ? 0 : currentToInsert;\r\n    if(lowerComparingIndex === -1 && upperComparingIndex === -1){\r\n        lowerComparingIndex = 1;\r\n        upperComparingIndex = 1;\r\n        toInsert = array[upperComparingIndex];\r\n    }\r\n    if(upperComparingIndex >= upperLimit){\r\n        isDone = true;\r\n    }\r\n    if(!isDone){\r\n        if(lowerComparingIndex > 0 && array[lowerComparingIndex - 1] > toInsert){\r\n            array[lowerComparingIndex] = array[lowerComparingIndex - 1];\r\n            lowerComparingIndex--;\r\n            highlighted = [upperComparingIndex];\r\n        }\r\n        else{\r\n            array[lowerComparingIndex] = toInsert;\r\n            highlighted = [lowerComparingIndex];\r\n            upperComparingIndex++;\r\n            lowerComparingIndex = upperComparingIndex;\r\n            toInsert = array[upperComparingIndex];\r\n        }\r\n    }\r\n    return {\"sortArray\" : array , \"isDone\" : isDone , \"lowerComparingIndex\" : lowerComparingIndex , \"upperComparingIndex\" : upperComparingIndex,\r\n            \"highlighted\" : highlighted, \"currentToInsert\" : toInsert};\r\n}\r\n\r\nexport default insert;","import bubble from './bubble';\r\nimport selection from './selection';\r\nimport insert from './insert';\r\nimport {BUBBLE, SELECTION, INSERTION} from '../enums/algos';\r\n\r\nconst sort = (upperLimit, algorithm, sortArrayObject) => {\r\n    let lowerComparingIndex = -1;\r\n    let upperComparingIndex = -1;\r\n    if(sortArrayObject.lowerComparingIndex !== undefined){\r\n        lowerComparingIndex = sortArrayObject.lowerComparingIndex;\r\n    }\r\n    if(sortArrayObject.upperComparingIndex !== undefined){\r\n        upperComparingIndex = sortArrayObject.upperComparingIndex;\r\n    }\r\n    if(algorithm === BUBBLE){\r\n        return bubble(lowerComparingIndex, upperComparingIndex, sortArrayObject.sortArray, upperLimit);\r\n    }\r\n    if(algorithm === SELECTION){\r\n        return selection(lowerComparingIndex, upperComparingIndex, sortArrayObject.sortArray, upperLimit, sortArrayObject.minIndex);\r\n    }\r\n    if(algorithm === INSERTION){\r\n        return insert(lowerComparingIndex, upperComparingIndex, sortArrayObject.sortArray, upperLimit, sortArrayObject.currentToInsert);\r\n    }\r\n}\r\n\r\n\r\nexport default sort;","export const BUBBLE = 'Bubble Sort';\r\nexport const SELECTION = 'Selection Sort';\r\nexport const INSERTION = 'Insertion Sort';","export const SLOW = {'text' : 'Slow', 'value' : 2}\r\nexport const MEDIUM = {'text' : 'Medium', 'value' : 4}\r\nexport const FAST = {'text' : 'Fast', 'value' : 8}","import React, {useState,useEffect} from 'react';\r\nimport SortBar from './sortBar/SortBar';\r\nimport SortBlock from './sortBlock/SortBlock';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport sort from '../../../../static/sort/algorithms/index';\r\nimport {BUBBLE, SELECTION, INSERTION} from '../../../../static/sort/enums/algos';\r\nimport {SLOW, MEDIUM, FAST} from '../../../../static/sort/enums/speeds';\r\nimport './Sort.css';\r\n\r\nexport default function Sort(){\r\n    const sortLength = 50;\r\n    \r\n    const getJumbledArray = (length) => {\r\n        for (var array=[],i=0;i<length;i++) array[i]=i+1;\r\n        var tmp, current, top = array.length;\r\n        if(top) while(--top) {\r\n            current = Math.floor(Math.random() * (top + 1));\r\n            tmp = array[current];\r\n            array[current] = array[top];\r\n            array[top] = tmp;\r\n        }\r\n        return array;\r\n    }\r\n    const [sortArrayObject, setSortArrayObject] = useState({\"sortArray\" : getJumbledArray(sortLength) , \"isDone\" : false, \"highlighted\" : []});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [algo, setAlgo] = React.useState(BUBBLE);\r\n    const [speed, setSpeed] = React.useState(SLOW);\r\n\r\n    useEffect(() =>{\r\n        if(isLoading){\r\n            document.body.style.cursor = 'progress';\r\n        }else{\r\n            document.body.style.cursor = 'default';\r\n        }\r\n        if(isLoading && !sortArrayObject.isDone){\r\n            let resultArrayObject = sortArrayObject;\r\n            let i = speed.value;\r\n            while(i !== 0){\r\n                resultArrayObject = sort(sortLength, algo, resultArrayObject);\r\n                i--;\r\n            }\r\n            setSortArrayObject(resultArrayObject);\r\n        }\r\n        if(isLoading && sortArrayObject.isDone){\r\n            setIsLoading(false);\r\n        }\r\n     },[isLoading, sortArrayObject] )\r\n\r\n    const startLoading = () => {\r\n        setIsLoading(true);\r\n    }\r\n    function setFindSpeed(speed){\r\n        setSpeed(speed);\r\n    }\r\n\r\n    function setFindAlgo(algo){\r\n        setAlgo(algo);\r\n    }\r\n    function reset(){\r\n        setSortArrayObject({\"sortArray\" : getJumbledArray(sortLength) , \"isDone\" : false, \"highlighted\" : []})\r\n    }\r\n\r\n    return (\r\n        <div className='sort'>\r\n            <SortBar startLoading={startLoading} isLoading={isLoading} algos={[BUBBLE, SELECTION, INSERTION]} \r\n            speeds={[SLOW, MEDIUM, FAST]} setFindSpeed={setFindSpeed} setFindAlgo={setFindAlgo} \r\n            reset={reset} />\r\n            <Divider/>\r\n            <SortBlock sortArray={sortArrayObject.sortArray} highlighted={sortArrayObject.highlighted}/>\r\n            <Modal open={isLoading} BackdropProps={{className: 'loadingBackDrop'}}><div></div></Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PathFinder from '../components/menu/tabPanel/pathFinder/PathFinder';\r\nimport Sort from '../components/menu/tabPanel/sort/Sort';\r\nimport DataStructure from '../components/menu/tabPanel/dataStructure/DataStructure';\r\n\r\nexport default [\r\n    {\r\n        \"label\"     :   \"Path Finder\",\r\n        \"menuIcon\"  :   <DeviceHubIcon />,\r\n        \"value\"     :   0,\r\n        \"tabPanel\"  :   <PathFinder/>\r\n    },\r\n    {\r\n        \"label\"     :   \"Sort\",\r\n        \"menuIcon\"  :   <SortIcon />,\r\n        \"value\"     :   1,\r\n        \"tabPanel\"  :   <Sort/>\r\n    }\r\n    // ,\r\n    // {\r\n    //     \"label\"     :   \"Data Structure\",\r\n    //     \"menuIcon\"  :   <StorageIcon />,\r\n    //     \"value\"     :   2,\r\n    //     \"tabPanel\"  :   <DataStructure/>\r\n    // }\r\n]\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport menuItems from '../../../static/menuItems'\r\n\r\nexport default function MenuBar(props){\r\n\r\n    return  <AppBar position=\"static\" color=\"default\">\r\n                <Tabs value={props.value} onChange={props.handleChange} indicatorColor=\"primary\" \r\n                textColor=\"primary\" centered>\r\n                    {menuItems.map((menu,i) => <Tab key={i} label={menu.label} icon={menu.menuIcon} \r\n                    disabled ={menu.value === 2}/>)}\r\n                </Tabs>\r\n            </AppBar>\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TabPanel from './tabPanel/TabPanel';\r\nimport MenuBar from './menuBar/MenuBar';\r\nimport menuItems from '../../static/menuItems'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MenuBar value={value} handleChange={handleChange}/>\r\n      {menuItems.map((menu,i)=> {\r\n        return  <TabPanel key={i} value={value} index={menu.value}>\r\n                  {menu.tabPanel}\r\n                </TabPanel>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Menu from './components/menu/Menu'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}